/*!
 *  BayLang Technology
 *
 *  (c) Copyright 2016-2024 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Runtime.Widget.Blocks.WidgetSettings.Settings;

use Runtime.BaseObject;
use Runtime.Entity.Factory;
use BayLang.Constructor.Frontend.Editor.Parameters.ParameterComponent;
use BayLang.Constructor.WidgetPage.ParameterFactory;
use BayLang.Constructor.WidgetPage.WidgetSettingsInterface;


class MenuSettings extends BaseObject implements WidgetSettingsInterface
{
	/**
	 * Returns widget name
	 */
	string getWidgetName() => "Menu";
	
	
	/**
	 * Returns component name
	 */
	string getComponentName() => "Runtime.Widget.Blocks.Menu.Menu";
	
	
	/**
	 * Returns selector name
	 */
	string getSelectorName() => "menu";
	
	
	/**
	 * Can insert widget
	 */
	bool canInsert(WidgetSettingsInterface widget)
	{
		return false;
	}
	
	
	/**
	 * Returns params
	 */
	Collection<Factory> getParams() =>
	[
		new ParameterFactory
		(
			classof ParameterComponent,
			{
				"name": "items",
				"label": "Items",
				"component": "BayLang.Constructor.Frontend.Components.SortableParams",
				"default":
				[
					{
						"href": "",
						"text": "Test",
						"target": "",
					},
				],
				"props":
				{
					"fields":
					[
						{
							"name": "href",
							"label": "Link",
							"component": "Runtime.Widget.Input",
						},
						{
							"name": "text",
							"label": "Text",
							"component": "Runtime.Widget.Input",
						},
						{
							"name": "target",
							"label": "Link",
							"component": "Runtime.Widget.Select",
							"default": "_self",
							"props": {
								"options": [
									{"key": "_self", "value": "self"},
									{"key": "_blank", "value": "blank"},
								],
							}
						},
					]
				},
			},
		)
	];
	
	
	/**
	 * Returns default template
	 */
	Dict<fn> getDefaultTemplate() =>
	{
		"default": Dict () =>
		{
			"template": rs::join("\n", [
				"<style>",
				"gap: 10px;",
				"padding-top: 10px;"
				"padding-bottom: 10px;"
				"%(Menu)widget_menu__item{",
				"}",
				"%(Menu)widget_menu__link{",
				"}",
				"</style>"
			])
		},
	};
}